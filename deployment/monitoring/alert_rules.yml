# =====================================================
# PROMETHEUS ALERT RULES
# =====================================================
# Alert rules for production monitoring
# Requirements: 10.4, 10.5
# =====================================================

groups:
  # =====================================================
  # APPLICATION ALERTS
  # =====================================================
  - name: application.rules
    rules:
      # Application is down
      - alert: ApplicationDown
        expr: up{job="loft-algerie-app"} == 0
        for: 1m
        labels:
          severity: critical
          service: application
        annotations:
          summary: "Application is down"
          description: "The Loft Algerie application has been down for more than 1 minute."

      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="loft-algerie-app"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes."

      # High error rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{job="loft-algerie-app",status=~"5.."}[5m]) / rate(http_requests_total{job="loft-algerie-app"}[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
          service: application
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes."

      # Low success rate for reservations
      - alert: LowReservationSuccessRate
        expr: rate(reservation_attempts_total{status="success"}[1h]) / rate(reservation_attempts_total[1h]) < 0.8
        for: 10m
        labels:
          severity: warning
          service: reservations
        annotations:
          summary: "Low reservation success rate"
          description: "Reservation success rate is {{ $value | humanizePercentage }} for the last hour."

  # =====================================================
  # INFRASTRUCTURE ALERTS
  # =====================================================
  - name: infrastructure.rules
    rules:
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}% on {{ $labels.instance }}."

      # High memory usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value }}% on {{ $labels.instance }}."

      # Low disk space
      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Low disk space detected"
          description: "Disk usage is {{ $value }}% on {{ $labels.instance }} ({{ $labels.mountpoint }})."

      # Container restart
      - alert: ContainerRestart
        expr: increase(container_restart_count[1h]) > 3
        for: 0m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Container restarting frequently"
          description: "Container {{ $labels.name }} has restarted {{ $value }} times in the last hour."

  # =====================================================
  # DATABASE ALERTS
  # =====================================================
  - name: database.rules
    rules:
      # Database connection issues
      - alert: DatabaseConnectionIssues
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "Database connection issues"
          description: "Cannot connect to PostgreSQL database."

      # High database connections
      - alert: HighDatabaseConnections
        expr: pg_stat_activity_count / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value | humanizePercentage }}."

      # Slow queries
      - alert: SlowQueries
        expr: rate(pg_stat_statements_mean_time_seconds[5m]) > 1
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Slow database queries detected"
          description: "Average query time is {{ $value }}s."

      # Database size growth
      - alert: DatabaseSizeGrowth
        expr: increase(pg_database_size_bytes[24h]) > 1e9  # 1GB growth per day
        for: 0m
        labels:
          severity: info
          service: database
        annotations:
          summary: "Rapid database growth"
          description: "Database has grown by {{ $value | humanizeBytes }} in the last 24 hours."

  # =====================================================
  # BUSINESS METRICS ALERTS
  # =====================================================
  - name: business.rules
    rules:
      # Low booking conversion rate
      - alert: LowBookingConversion
        expr: rate(reservations_created_total{status="confirmed"}[1h]) / rate(reservations_created_total[1h]) < 0.2
        for: 30m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "Low booking conversion rate"
          description: "Booking conversion rate is {{ $value | humanizePercentage }} for the last hour."

      # Payment failures
      - alert: HighPaymentFailures
        expr: rate(payment_attempts_total{status="failed"}[1h]) / rate(payment_attempts_total[1h]) > 0.1
        for: 15m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "High payment failure rate"
          description: "Payment failure rate is {{ $value | humanizePercentage }} for the last hour."

      # No bookings for extended period
      - alert: NoBookings
        expr: increase(reservations_created_total[2h]) == 0
        for: 0m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "No bookings received"
          description: "No new bookings have been received in the last 2 hours."

      # Revenue drop
      - alert: RevenueDrop
        expr: sum(rate(reservation_revenue_total[1h])) < sum(rate(reservation_revenue_total[1h] offset 24h)) * 0.5
        for: 1h
        labels:
          severity: warning
          service: business
        annotations:
          summary: "Significant revenue drop"
          description: "Revenue is 50% lower than the same time yesterday."

  # =====================================================
  # SECURITY ALERTS
  # =====================================================
  - name: security.rules
    rules:
      # Too many failed login attempts
      - alert: HighFailedLogins
        expr: rate(auth_attempts_total{status="failed"}[5m]) > 10
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High number of failed login attempts"
          description: "{{ $value }} failed login attempts per second in the last 5 minutes."

      # Suspicious API usage
      - alert: SuspiciousAPIUsage
        expr: rate(http_requests_total{job="loft-algerie-app"}[5m]) > 100
        for: 5m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "Unusually high API usage"
          description: "API request rate is {{ $value }} requests/second."

      # SSL certificate expiry
      - alert: SSLCertificateExpiry
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7  # 7 days
        for: 0m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}."

  # =====================================================
  # EXTERNAL DEPENDENCIES
  # =====================================================
  - name: external.rules
    rules:
      # External service down
      - alert: ExternalServiceDown
        expr: probe_success{job="blackbox"} == 0
        for: 2m
        labels:
          severity: critical
          service: external
        annotations:
          summary: "External service is down"
          description: "{{ $labels.instance }} is not responding to health checks."

      # High external service response time
      - alert: HighExternalResponseTime
        expr: probe_duration_seconds{job="blackbox"} > 5
        for: 5m
        labels:
          severity: warning
          service: external
        annotations:
          summary: "High external service response time"
          description: "{{ $labels.instance }} response time is {{ $value }}s."